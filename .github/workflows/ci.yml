name: Continuous integration

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  backend-ci:
    runs-on: ubuntu-latest
    env:
      POSTGRES_USER: ${{ secrets.DB_USER }}
      POSTGRES_DB: ${{ secrets.DB_NAME }}
      POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Create .env file
        run: |
          cd backend
          echo "POSTGRES_USER=${{ secrets.DB_USER }}" >> .env
          echo "POSTGRES_DB=${{ secrets.DB_NAME }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
      - name: Build and start Docker containers
        run: |
          cd backend
          docker compose build --pull
          docker compose up -d
      - name: List running containers
        run: docker ps
      - name: Stop Docker containers
        run: |
          cd backend
          docker compose down

  frontend-ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest
          run_install: false
      - name: Get pnpm store path
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: |
          cd frontend
          pnpm install
      - name: Run checks
        run: |
          cd frontend
          pnpm check
      - name: Build project
        run: |
          cd frontend
          pnpm build